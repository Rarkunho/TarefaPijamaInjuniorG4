generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  CREDIT_CARD
  PIX
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  @@map("users")
}

model Address {
  id           String @id @default(uuid())
  zipCode      String
  state        String
  city         String
  neighborhood String
  address      String
  number       String

  sales Sale[]

  @@map("address")
}

model SalePajama {
  saleId   String
  pajamaId String

  sale   Sale   @relation(fields: [saleId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  pajama Pajama @relation(fields: [pajamaId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  quantity Int
  price    Float

  // ID composto de entidade fraca:
  @@id([saleId, pajamaId])
  @@map("sales_pajamas")
}

model Sale {
  id            String  @id @default(uuid())
  buyerName     String
  cpf           String
  price         Float
  paymentMethod PaymentMethod
  installments  Int     @default(1)
  cardNumber    String?

  salePajamas SalePajama[]

  // ID de endereço é modificado para null quando o respectivo
  // endereço referenciado é removido do BD para persistir o
  // registro de venda 
  addressId String?
  address   Address? @relation(fields: [addressId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@map("sales")
}

model PajamaSize {
  id            String @id @default(uuid())
  stockQuantity Int    @default(0)

  // size definido como String como método
  // preventivo de futuras mudanças
  // na convenção de armazenamento dos tamanhos
  size String

  pajamaId String
  pajama   Pajama @relation(fields: [pajamaId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("pajama_sizes")
}

model Pajama {
  id          String  @id @default(uuid())
  name        String
  description String
  image       String
  price       Float
  season      String
  type        String
  gender      String
  favorite    Boolean
  onSale      Boolean
  salePercent Float?

  sizes       PajamaSize[]
  salePajamas SalePajama[]

  @@map("pajamas")
}

model Feedback {
  id          String @id @default(uuid())
  name        String
  description String
  rating      Float

  @@map("feedback")
}
